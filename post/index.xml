<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 飞鸿</title>
    <link>//puyixiaowo.win/post/</link>
    <description>Recent content in Posts on 飞鸿</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; &lt;a href=&#34;//github.com/ysdxz207&#34; target=&#34;_blank&#34;&gt;ysdxz207&lt;/a&gt; 2017</copyright>
    <lastBuildDate>Fri, 19 May 2017 17:22:37 +0800</lastBuildDate>
    
	<atom:link href="//puyixiaowo.win/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>mysql主从复制配置</title>
      <link>//puyixiaowo.win/post/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 19 May 2017 17:22:37 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E9%85%8D%E7%BD%AE/</guid>
      <description>1.两台机IP分别为：  `192.168.137.46`//主 `192.168.137.250`//从  2.主库配置：  修改配置文件 /etc/mysql/my.cnf
[mysqld] server-id = 1 #主库的服务器ID log_bin = /var/log/mysql/mysql-bin.log #这里需要开启bin log binlog_do_db = db_tnews_news #需要同步的库 binlog_do_db = db_tnews_dictionary #需要同步的库 binlog_do_db = db_tnews_member #需要同步的库 binlog_do_db = db_tnews_manager #需要同步的库 #binlog_ignore_db = include_database_name #忽略的库  重启mysql服务
service mysql restart &amp;gt; 这里因为我用的是mysql-server-5.5的所以是服务名是mysql
 配置同步用户
mysql -u root -p #登录root用户 mysql&amp;gt;GRANT REPLICATION SLAVE ON *.* to &#39;baker&#39;@&#39;192.168.137.250&#39; identified by &#39;123456&#39;; mysql&amp;gt;flush privileges;  然后查看一下主服务器当前二进制日志名和偏移量，也就是同步的起始点
mysql&amp;gt; show master status; +------------------+----------+--------------------------------------------------------------------+------------------+ | File | Position | Binlog_Do_DB | Binlog_Ignore_DB | +------------------+----------+--------------------------------------------------------------------+------------------+ | mysql-bin.</description>
    </item>
    
    <item>
      <title>debian切换默认桌面环境</title>
      <link>//puyixiaowo.win/post/debian%E5%88%87%E6%8D%A2%E9%BB%98%E8%AE%A4%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 19 May 2017 10:23:54 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/debian%E5%88%87%E6%8D%A2%E9%BB%98%E8%AE%A4%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</guid>
      <description>update-alternatives --config x-session-manager</description>
    </item>
    
    <item>
      <title>git使用gae代理</title>
      <link>//puyixiaowo.win/post/git%E4%BD%BF%E7%94%A8gae%E4%BB%A3%E7%90%86/</link>
      <pubDate>Mon, 08 May 2017 15:38:22 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/git%E4%BD%BF%E7%94%A8gae%E4%BB%A3%E7%90%86/</guid>
      <description>用户目录下.gitconfig配置如下:
[user] email = xxx@qq.com name = xxx [http] proxy = http://127.0.0.1:8087 sslVerify = false [https] proxy = http://127.0.0.1:8087 sslVerify = false  </description>
    </item>
    
    <item>
      <title>mybatis-generator配置说明</title>
      <link>//puyixiaowo.win/post/mybatis-generator%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Wed, 26 Apr 2017 14:06:59 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/mybatis-generator%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</guid>
      <description>mybatis generator config
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE generatorConfiguration PUBLIC &amp;quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&amp;quot; &amp;quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&amp;quot;&amp;gt; &amp;lt;!-- 根节点&amp;lt;generatorConfiguration&amp;gt; :节点没有任何属性，直接写节点即可，如下： --&amp;gt; &amp;lt;generatorConfiguration&amp;gt; &amp;lt;!-- &amp;lt;properties&amp;gt; 引入外部文件 使用${property}调用 --&amp;gt; &amp;lt;!-- &amp;lt;properties resource=&amp;quot;jdbc.properties&amp;quot;/&amp;gt; --&amp;gt; &amp;lt;!-- resource：指定**classpath**下的属性文件，使用类似com/myproject/generatorConfig.properties这样的属性值。 --&amp;gt; &amp;lt;!-- url：可以指定文件系统上的特定位置，例如file:///C:/myfolder/generatorConfig.properties --&amp;gt; &amp;lt;!-- &amp;lt;context&amp;gt;元素用于指定生成一组对象的环境。例如指定要连接的数据库，要生成对象的类型和要处理的数据库中的表。运行MBG的时候还可以指定要运行的&amp;lt;context&amp;gt;。 --&amp;gt; &amp;lt;!-- id:必选属性，该id属性可以在运行时的使用。 defaultModelType:这个属性定义了MBG如何生成*实体类*。 conditional:*这是默认值*,这个模型和下面的hierarchical类似，除了如果那个单独的类将只包含一个字段，将不会生成一个单独的类。 因此,如果一个表的主键只有一个字段,那么不会为该字段生成单独的实体类,会将该字段合并到基本实体类中。 flat:该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。*这种模型最简单，推荐使用。* hierarchical:如果表有主键,那么该模型会产生一个单独的主键实体类,如果表还有BLOB字段， 则会为表生成一个包含所有BLOB字段的单独的实体类,然后为所有其他的字段生成一个单独的实体类。 MBG会在所有生成的实体类之间维护一个继承关系。 targetRuntime:此属性用于指定生成的代码的运行时环境。该属性支持以下可选值： MyBatis3:*这是默认值* MyBatis3Simple Ibatis2Java2 Ibatis2Java5 一般情况下使用默认值即可，有关这些值的具体作用以及区别请查看中文文档的详细内容。 introspectedColumnImpl:该参数可以指定扩展org.mybatis.generator.api.IntrospectedColumn该类的实现类。该属性的作用可以查看扩展MyBatis Generator。 --&amp;gt; &amp;lt;context id=&amp;quot;testTables&amp;quot; targetRuntime=&amp;quot;MyBatis3&amp;quot;&amp;gt; &amp;lt;!-- &amp;lt;property name=&amp;quot;&amp;quot; value=&amp;quot;&amp;quot;/&amp;gt; autoDelimitKeywords :当表名或者字段名为SQL关键字的时候，可以设置该属性为true，MBG会自动给表名或字段名添加分隔符。 beginningDelimiter ：由于beginningDelimiter和endingDelimiter的默认值为双引号(&amp;quot;)，在Mysql中不能这么写，所以还要将这两个默认值改为**反单引号(`)**， endingDelimiter ：&amp;lt;property name=&amp;quot;beginningDelimiter&amp;quot; value=&amp;quot;`&amp;quot;/&amp;gt; &amp;lt;property name=&amp;quot;endingDelimiter&amp;quot; value=&amp;quot;`&amp;quot;/&amp;gt; javaFileEncoding ：属性javaFileEncoding设置要使用的Java文件的编码，默认使用当前平台的编码，只有当生产的编码需要特殊指定时才需要使用，一般用不到。 javaFormatter ：最后两个javaFormatter和xmlFormatter属性**可能会**很有用，如果你想使用模板来定制生成的java文件和xml文件的样式，你可以通过指定这两个属性的值来实现。 xmlFormatter ：最后两个javaFormatter和xmlFormatter属性**可能会**很有用，如果你想使用模板来定制生成的java文件和xml文件的样式，你可以通过指定这两个属性的值来实现。 --&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>mysql 随机查询n条</title>
      <link>//puyixiaowo.win/post/mysql-%E9%9A%8F%E6%9C%BA%E6%9F%A5%E8%AF%A2n%E6%9D%A1/</link>
      <pubDate>Tue, 25 Apr 2017 14:33:35 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/mysql-%E9%9A%8F%E6%9C%BA%E6%9F%A5%E8%AF%A2n%E6%9D%A1/</guid>
      <description>DROP TABLE IF EXISTS test_random; CREATE TABLE `test_random` ( `id` int(11) NOT NULL AUTO_INCREMENT, `create_time` datetime DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; DROP FUNCTION IF EXISTS test_random_func; CREATE FUNCTION test_random_func(num INT) RETURNS INT BEGIN DECLARE n INT UNSIGNED DEFAULT 0; WHILE n &amp;lt; num DO INSERT INTO test_random(`create_time`) VALUES(NOW()); SET n=n+1; END WHILE; RETURN n; END; SELECT test_random_func(200000) AS &#39;数据条数&#39;; EXPLAIN SELECT id AS &#39;RAND()查询结果&#39; FROM test_random ORDER BY RAND() limit 0, 10; SELECT t.</description>
    </item>
    
    <item>
      <title>利用github pages和hugo搭建个人博客</title>
      <link>//puyixiaowo.win/post/%E5%88%A9%E7%94%A8github-pages%E5%92%8Chugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 15 Apr 2017 11:55:48 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/%E5%88%A9%E7%94%A8github-pages%E5%92%8Chugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>hugo生成静态网站，sass+bulma布局，grunt监控压缩css以及生成搜索索引文件， 放弃使用gulp是因为node-sass总是安装不上。全文搜索引擎使用lunr.js,因为lunr 不支持中文分词，故此使用segment分词配合使用中文修改版lunr
全局安装grunt npm install -g grunt-cli
grunt需要ruby 然后安装sass
gem install sass gem install compass  </description>
    </item>
    
    <item>
      <title>删除注释空行正则</title>
      <link>//puyixiaowo.win/post/%E5%88%A0%E9%99%A4%E6%B3%A8%E9%87%8A%E7%A9%BA%E8%A1%8C%E6%AD%A3%E5%88%99/</link>
      <pubDate>Mon, 06 Mar 2017 16:24:52 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/%E5%88%A0%E9%99%A4%E6%B3%A8%E9%87%8A%E7%A9%BA%E8%A1%8C%E6%AD%A3%E5%88%99/</guid>
      <description>/\*{1,2}[\s\S]*?\*/|\/\/.+|^\s*\n  </description>
    </item>
    
    <item>
      <title>idea live template</title>
      <link>//puyixiaowo.win/post/idea-live-template/</link>
      <pubDate>Mon, 06 Mar 2017 16:23:32 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/idea-live-template/</guid>
      <description>/** * * @author feihong * @date $DATETIME$ */ groovyScript(&amp;quot;return new Date().format(&#39;yyyy-MM-dd HH:mm:ss&#39;)&amp;quot;, methodParameters())  </description>
    </item>
    
    <item>
      <title>mybatis延迟加载导致dubbo值为null解决办法</title>
      <link>//puyixiaowo.win/post/mybatis%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E5%AF%BC%E8%87%B4dubbo%E5%80%BC%E4%B8%BAnull%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Tue, 21 Feb 2017 11:11:26 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/mybatis%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E5%AF%BC%E8%87%B4dubbo%E5%80%BC%E4%B8%BAnull%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>场景条件：
1、bean里有两个属性：
private String subjectCategoryName;//分类名 private String className;//班级分类名称  2、使用mybatis嵌套查询：
&amp;lt;association property=&amp;quot;className&amp;quot; fetchType=&amp;quot;eager&amp;quot; javaType=&amp;quot;java.lang.String&amp;quot; column=&amp;quot;{id=class_id}&amp;quot; select=&amp;quot;selectClassName&amp;quot; /&amp;gt; &amp;lt;association property=&amp;quot;subjectCategoryName&amp;quot; fetchType=&amp;quot;eager&amp;quot; javaType=&amp;quot;java.lang.String&amp;quot; column=&amp;quot;{id=subject_category}&amp;quot; select=&amp;quot;selectCategoryName&amp;quot; /&amp;gt;  3、查询报错：
Caused by: com.alibaba.com.caucho.hessian.io.HessianProtocolException: com.alibaba.com.caucho.hessian.io.ObjectDeserializer: unexpected object java.lang.String (id) at com.alibaba.com.caucho.hessian.io.AbstractDeserializer.error(AbstractDeserializer.java:108) at com.alibaba.com.caucho.hessian.io.AbstractDeserializer.readMap(AbstractDeserializer.java:95) at com.alibaba.com.caucho.hessian.io.Hessian2Input.readObject(Hessian2Input.java:1550) at com.alibaba.com.caucho.hessian.io.JavaDeserializer$ObjectFieldDeserializer.deserialize(JavaDeserializer.java:396) ... 47 more  4、debug发现service里有值，但无法进入action
5、google 搜索mybatis association dubbo找到https://github.com/alibaba/dubbo/issues/156
于是明白了原因，将mybatis设置中改为false，发现确实没报错了，也有数据了，于是把mybatis 设置改回true，然后更改如下代码
&amp;lt;association property=&amp;quot;subjectCategoryName&amp;quot; fetchType=&amp;quot;eager&amp;quot; javaType=&amp;quot;java.lang.String&amp;quot; column=&amp;quot;{id=subject_category}&amp;quot; select=&amp;quot;selectCategoryName&amp;quot; /&amp;gt; &amp;lt;association property=&amp;quot;className&amp;quot; fetchType=&amp;quot;eager&amp;quot; javaType=&amp;quot;java.lang.String&amp;quot; column=&amp;quot;{id=class_id}&amp;quot; select=&amp;quot;selectClassName&amp;quot;  增加了fetchType=&amp;ldquo;eager&amp;rdquo;问题解决</description>
    </item>
    
    <item>
      <title>使用jquery 的data()函数注意事项</title>
      <link>//puyixiaowo.win/post/%E4%BD%BF%E7%94%A8jquery-%E7%9A%84data%E5%87%BD%E6%95%B0%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Wed, 04 Nov 2015 17:12:34 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/%E4%BD%BF%E7%94%A8jquery-%E7%9A%84data%E5%87%BD%E6%95%B0%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>这种写法在jquery缓存中保存的key并不是kindType，而是kind-type，故此$(&amp;lsquo;#test&amp;rsquo;).data(&amp;lsquo;kindType&amp;rsquo;)是取不到值的。此处要注意</description>
    </item>
    
    <item>
      <title>mysql使用left join（一对多）后重复导致sum重复相加问题解决</title>
      <link>//puyixiaowo.win/post/mysql%E4%BD%BF%E7%94%A8left-join%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%90%8E%E9%87%8D%E5%A4%8D%E5%AF%BC%E8%87%B4sum%E9%87%8D%E5%A4%8D%E7%9B%B8%E5%8A%A0%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Fri, 23 Oct 2015 11:43:30 +0800</pubDate>
      
      <guid>//puyixiaowo.win/post/mysql%E4%BD%BF%E7%94%A8left-join%E4%B8%80%E5%AF%B9%E5%A4%9A%E5%90%8E%E9%87%8D%E5%A4%8D%E5%AF%BC%E8%87%B4sum%E9%87%8D%E5%A4%8D%E7%9B%B8%E5%8A%A0%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>http://stackoverflow.com/questions/2436284/mysql-sum-for-distinct-rows
示例：
sum后总和 = 每一组的和*重复次数 =&amp;gt;每一组的sum和 = sum后总和 / 重复次数 重复次数= 查询总条数 / 每一组的条数 而每一组的sum和是我们所要的结果 所以 每一组的sum和 = sum后总和 * 每一组的条数 / 查询总条数  </description>
    </item>
    
  </channel>
</rss>